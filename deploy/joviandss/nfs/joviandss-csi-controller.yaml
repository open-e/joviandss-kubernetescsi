---

apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: joviandss-snapshot-nfs-sc
driver: nfs.csi.joviandss.open-e.com
deletionPolicy: Delete

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: joviandss-nfs-sc
provisioner: nfs.csi.joviandss.open-e.com
parameters:
reclaimPolicy: Delete
volumeBindingMode: Immediate

---

apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: joviandss-snapshot-nfs-sc
driver: nfs.csi.joviandss.open-e.com
deletionPolicy: Delete

---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: nfs.csi.joviandss.open-e.com
spec:
  attachRequired: true
  podInfoOnMount: true

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: joviandss-csi-controller-service-account
  namespace: joviandss-csi

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: joviandss-csi-controller-cluster-role
rules:
  - apiGroups: ['']
    resources: ['secrets']
    verbs: ['get', 'list']
  - apiGroups: ['']
    resources: ['persistentvolumes']
    verbs: ['get', 'list', 'watch', 'create', 'update', 'delete', "patch"]
  - apiGroups: ['']
    resources: ['persistentvolumeclaims']
    verbs: ['get', 'list', 'watch', 'update']
  - apiGroups: ['storage.k8s.io']
    resources: ['storageclasses']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['']
    resources: ['events']
    verbs: ['get', 'list', 'watch', 'create', 'update', 'patch']
  - apiGroups: ['snapshot.storage.k8s.io']
    resources: ['volumesnapshots']
    verbs: ['get', 'list']
  - apiGroups: ['snapshot.storage.k8s.io']
    resources: ['volumesnapshotcontents']
    verbs: ['get', 'list']
  - apiGroups: ['']
    resources: ['nodes']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['csi.storage.k8s.io']
    resources: ['csinodeinfos']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['storage.k8s.io']
    resources: ["csinodes", "volumeattachments", "volumeattachments/status" ]
    verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
  - apiGroups: ['snapshot.storage.k8s.io']
    resources: ['volumesnapshotclasses']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['snapshot.storage.k8s.io']
    resources: ['volumesnapshotcontents']
    verbs: ['create', 'get', 'list', 'watch', 'update', 'delete']
  - apiGroups: ['snapshot.storage.k8s.io']
    resources: ['volumesnapshots']
    verbs: ['get', 'list', 'watch', 'update']
  - apiGroups: ['apiextensions.k8s.io']
    resources: ['customresourcedefinitions']
    verbs: ['create', 'list', 'watch', 'delete']
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: joviandss-csi-controller-cluster-role-binding
  namespace: joviandss-csi
subjects:
  - kind: ServiceAccount
    name: joviandss-csi-controller-service-account
    namespace: joviandss-csi
roleRef:
  kind: ClusterRole
  name: joviandss-csi-controller-cluster-role
  apiGroup: rbac.authorization.k8s.io

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: joviandss-csi-snapshot-controller-cluster-role-binding
  namespace: joviandss-csi
subjects:
  - kind: ServiceAccount
    name: joviandss-csi-controller-service-account
    namespace: joviandss-csi
roleRef:
  kind: ClusterRole
  name: snapshot-controller-runner
    #name: joviandss-csi-controller-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: joviandss-csi-controller
  namespace: joviandss-csi
spec:
  serviceName: "joviandss-csi-controller"
  replicas: 1
  selector:
    matchLabels:
      app: joviandss-csi-controller
  template:
    metadata:
      labels:
        app: joviandss-csi-controller
    spec:
      serviceAccount: joviandss-csi-controller-service-account
      hostNetwork: true
      containers:
        - name: csi-provisioner
          image: quay.io/k8scsi/csi-provisioner:v2.1.2
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
            - --volume-name-prefix=pvc-ns
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy

        - name: csi-snapshotter
          image: registry.k8s.io/sig-storage/csi-snapshotter:v6.2.3
          args:
            - --v=5
            - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
            - "--leader-election=false"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy

        - name: csi-attacher
          image: quay.io/k8scsi/csi-attacher:v3.1.0
          imagePullPolicy: IfNotPresent
          args:
            - --v=3
            - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy

        - name: csi-controller
          image: opene/joviandss-csi:latest
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          args:
            - --csi-address=/csi/csi.sock
            - --soc-type=unix
            - --config=$(JOVIANDSS_CONFIG)
            - --controller
            - --identity
          env:
            - name: JOVIANDSS_CONFIG
              value: /config/cfg.yaml
          imagePullPolicy: Always
          securityContext:
            privileged: true
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: config
              mountPath: /config
              readOnly: true
      volumes:
        - name: config
          secret:
            secretName: jdss-controller-cfg 
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/com.open-e.joviandss.csi.cntr
            type: DirectoryOrCreate
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
